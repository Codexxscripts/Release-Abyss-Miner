repeat task.wait(0.25) until game:IsLoaded();
getgenv().Image = "rbxassetid://89486144961689"; -- put a asset id in here to make it work
getgenv().ToggleUI = "E" -- This where you can Toggle the Fluent ui library

task.spawn(function()
    if not getgenv().LoadedMobileUI == true then getgenv().LoadedMobileUI = true
        local OpenUI = Instance.new("ScreenGui");
        local ImageButton = Instance.new("ImageButton");
        local UICorner = Instance.new("UICorner");
        OpenUI.Name = "OpenUI";
        OpenUI.Parent = game:GetService("CoreGui");
        OpenUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
        ImageButton.Parent = OpenUI;
        ImageButton.BackgroundColor3 = Color3.fromRGB(105,105,105);
        ImageButton.BackgroundTransparency = 0.8
        ImageButton.Position = UDim2.new(0.9,0,0.1,0);
        ImageButton.Size = UDim2.new(0,50,0,50);
        ImageButton.Image = getgenv().Image;
        ImageButton.Draggable = true;
        ImageButton.Transparency = 1;
        UICorner.CornerRadius = UDim.new(0,200);
        UICorner.Parent = ImageButton;
        ImageButton.MouseButton1Click:Connect(function()
            game:GetService("VirtualInputManager"):SendKeyEvent(true,getgenv().ToggleUI,false,game);
        end)
    end
end)
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Release Abyss Miner " .. Fluent.Version,
    SubTitle = "by @Codexxscripts",
    TabWidth = 160,
    Size = UDim2.fromOffset(480, 360),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Aqua",
    MinimizeKey = Enum.KeyCode.E -- Used when theres no MinimizeKeybind
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "Mango" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "This is a notification",
        SubContent = "SubContent", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })

local Toggle = Tabs.Main:AddToggle("Auto Mine", {Title = "This is Toggle", Default = true })

    Toggle:OnChanged(function()
        local HitBox = game:GetService("ReplicatedStorage").RemoteEvent.HitBox
local SellAll = game:GetService("ReplicatedStorage").RemoteEvent.SellAllInventory
local Layer1 = workspace.Map["Layer 1"]
local NPC = Layer1.Npcs["Rei ' The professer"]

while task.wait(0.1) do
    for _, stone in pairs(Layer1:GetChildren()) do
        if stone:FindFirstChild("Amount") then
            for _ = 1, 30 do
                HitBox:FireServer(3, "Standard", false, "Rusty Pickaxe", 1)
                task.wait(0.03)
            end
        end
    end
    if NPC and NPC:FindFirstChild("Rei") then
        SellAll:FireServer(NPC.Rei, NPC.Rei.HumanoidRootPart.Dialogue)
    end
end

wait(0.1)

local HitBox = game:GetService("ReplicatedStorage").RemoteEvent.HitBox
local SellAll = game:GetService("ReplicatedStorage").RemoteEvent.SellAllInventory
local Layer1 = workspace.Map["Layer 1"]
local NPC = Layer1.Npcs["Rei ' The professer"]

while task.wait(0.1) do
    for _, stone in pairs(Layer1:GetChildren()) do
        if stone:FindFirstChild("Amount") then
            for _ = 1, 30 do
                HitBox:FireServer(5, "Standard", false, "Iron Pickaxe", 1)
                task.wait(0.03)
            end
        end
    end
    if NPC and NPC:FindFirstChild("Rei") then
        SellAll:FireServer(NPC.Rei, NPC.Rei.HumanoidRootPart.Dialogue)
    end
end
    end)

local Toggle = Tabs.Main:AddToggle("Auto Sell", {Title = "This is Toggle", Default = true })

    Toggle:OnChanged(function()
print("Work Script")
end)

